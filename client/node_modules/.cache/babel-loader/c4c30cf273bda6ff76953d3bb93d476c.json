{"ast":null,"code":"var _jsxFileName = \"/Users/zqm/JavaScriptProjects/behance-shopping/src/pages/shop/shop.component.jsx\";\nimport React from 'react';\nimport { Route } from 'react-router-dom'; // import { connect } from 'react-redux';\n\nimport CollectionOverview from '../../components/collections-overview/collections-overview.component';\nimport CollectionPage from '../collection/collection.component';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils'; // import { updateCollections } from '../../redux/shop/shop.actions';\n\nclass ShopPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.unsubscribeFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    // const { updateCollections } = this.props;\n    const collectionRef = firestore.collection('collections');\n    console.log('ddddd');\n    collectionRef.onSnapshot(async snapshot => {\n      console.log('snapshot'); // const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      // updateCollections(collectionsMap);\n    });\n  }\n\n  render() {\n    const {\n      match\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"shop-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      component: CollectionOverview,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      component: CollectionPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }\n    }));\n  }\n\n} // const mapDispatchToProps = dispatch => ({\n//   updateCollections: collectionsMap => \n//     dispatch(updateCollections(collectionsMap))\n// });\n// export default connect(null, mapDispatchToProps)(ShopPage);\n\n\nexport default ShopPage;","map":{"version":3,"sources":["/Users/zqm/JavaScriptProjects/behance-shopping/src/pages/shop/shop.component.jsx"],"names":["React","Route","CollectionOverview","CollectionPage","firestore","convertCollectionsSnapshotToMap","ShopPage","Component","unsubscribeFromSnapshot","componentDidMount","collectionRef","collection","console","log","onSnapshot","snapshot","render","match","props","path"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB,C,CACA;;AACA,OAAOC,kBAAP,MAA+B,sEAA/B;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D,C,CACA;;AAEA,MAAMC,QAAN,SAAuBN,KAAK,CAACO,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACrCC,uBADqC,GACX,IADW;AAAA;;AAGrCC,EAAAA,iBAAiB,GAAG;AAClB;AACA,UAAMC,aAAa,GAAGN,SAAS,CAACO,UAAV,CAAqB,aAArB,CAAtB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACAH,IAAAA,aAAa,CAACI,UAAd,CAAyB,MAAMC,QAAN,IAAkB;AACzCH,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EADyC,CAEzC;AACA;AACD,KAJD;AAKD;;AAEDG,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKC,KAAvB;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAG,GAAED,KAAK,CAACE,IAAK,EAAjC;AAAoC,MAAA,SAAS,EAAEjB,kBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAG,GAAEe,KAAK,CAACE,IAAK,gBAA3B;AAA4C,MAAA,SAAS,EAAEhB,cAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAMD;;AAtBoC,C,CAyBvC;AACA;AACA;AACA;AAEA;;;AAEA,eAAeG,QAAf","sourcesContent":["import React from 'react';\nimport { Route } from 'react-router-dom';\n// import { connect } from 'react-redux';\nimport CollectionOverview from '../../components/collections-overview/collections-overview.component';\nimport CollectionPage from '../collection/collection.component';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\n// import { updateCollections } from '../../redux/shop/shop.actions';\n\nclass ShopPage extends React.Component {\n  unsubscribeFromSnapshot = null;\n\n  componentDidMount() {\n    // const { updateCollections } = this.props;\n    const collectionRef = firestore.collection('collections');\n    console.log('ddddd')\n    collectionRef.onSnapshot(async snapshot => {\n      console.log('snapshot')\n      // const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      // updateCollections(collectionsMap);\n    })\n  }\n  \n  render() {\n    const { match } = this.props;\n    return (\n      <div className='shop-page'>\n        <Route exact path={`${match.path}`} component={CollectionOverview} />\n        <Route path={`${match.path}/:collectionId`} component={CollectionPage} />\n      </div>\n    );\n  }\n}\n\n// const mapDispatchToProps = dispatch => ({\n//   updateCollections: collectionsMap => \n//     dispatch(updateCollections(collectionsMap))\n// });\n\n// export default connect(null, mapDispatchToProps)(ShopPage);\n\nexport default ShopPage;"]},"metadata":{},"sourceType":"module"}